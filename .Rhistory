## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs >= threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
AllData = rbind(AllData, Data)
}
results = cor(AllData$sulfate, AllData$nitrate, use="na.or.complete")
}
x <- corr()
x
summar(x)
summary(x)
x <- corr("specdata", 150)
summary(x)
complete("specdata", 1)
complete("specdata", 3)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25
)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs >= threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
AllData = rbind(AllData, Data)
}
results = cor(AllData$sulfate, AllData$nitrate, use="everything")
}
corr("specdata", 150)
x <- corr("specdata", 150)
summary(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs >= threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
AllData = rbind(AllData, Data)
}
results = cor(AllData$sulfate, AllData$nitrate, use="complete.obs")
}
x <- corr("specdata", 150)
summary(x)
head(x)
x
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs > threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(AllData$sulfate, AllData$nitrate, use= "na.or.complete")
results <- append(results, test_results)
}
results
}
x <- corr("specdata", 150)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs > threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "na.or.complete")
results <- append(results, test_results)
}
results
}
x <- corr("specdata", 150)
head(x)
summar(x)
summary(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs >= threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "na.or.complete")
results <- append(results, test_results)
}
results
}
summary(x)
x <- corr("specdata", 150)
head(x)
summary(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs >= threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "complete.obs")
results <- append(results, test_results)
}
results
}
x <- corr("specdata", 150)
summary(x)
head(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs > threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "complete.obs")
results <- append(results, test_results)
}
results
}
x <- corr("specdata", 150)
summary(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs > threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "complete.obs")
results <- append(results, test_results)
}
results
}
summary(x)
x <- corr("specdata", 150)
summary(x)
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
val_results <- complete(directory=directory, printit=FALSE)
val_results <- subset(val_results, val_results$nobs > threshold)
# Load the data -- Sample in val_results[1]
AllData <- data.frame()
results <- numeric()
for (i in val_results$id) {
#str =sprintf("Processing %d", i)
# print(str)
if (i < 10) {
fname <- sprintf("%s/00%d.csv", directory, i)
} else if (i < 100) {
fname <- sprintf("%s/0%d.csv", directory, i)
} else {
fname = sprintf("%s/%d.csv", directory, i)
}
# str= sprintf("reading %s", fname)
# print (str)
Data = read.csv(fname)
test_results = cor(Data$sulfate, Data$nitrate, use= "na.or.complete")
results <- append(results, test_results)
}
results
}
x <- corr("specdata", 150)
summary(x)
source("corr.R")
x <- corr("specdata", 150)
class(r)
class(val_results)
nrow(r)
nrow(val_results)
if (r == val_results) {print "yes"}
if (r == val_results) {print ("yes")}
q
source("corr.r")
x <- corr("specdata", 150)
source("corr.R")
x <- corr("specdata", 150)
head(x)
nrow(x)
x
source("complete.R")
source("corr.R")
x<- corr("specdata", 150)
head(x)
corr2 <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
cr <- numeric()
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
cr <- append(cr, cor(myData$sulfate, myData$nitrate, use="na.or.complete"))
}
cr
}
y<- corr2("specdata", 150)
head(y)
head(x)
summary(7)
summary(y)
summary(x)
corr2 <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
Y <- corr2("specdata",150)
head(y)
summaryy
summary(y)
summary(x)
corr2 <- function(directory, threshold = 0) {
# --- Assert 'directory' is a character vector of length 1 indicating the
# location of the CSV files.  'threshold' is a numeric vector of length 1
# indicating the number of completely observed observations (on all
# variables) required to compute the correlation between nitrate and
# sulfate; the default is 0.  Return a numeric vector of correlations.
# --- Assert create an empty numeric vector
corrsNum <- numeric(0)
# --- Assert get a data frame as ID = 1:332
nobsDfr <- complete("specdata")
# --- Assert apply threshold
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
# --- Assert get a data frame as ID in $id
monDfr <- getmonitor(cid, directory)
# --- Assert calculate correlation between $sulfate and $nitrate
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
# --- Assert return value is a numeric vector of correlations
return(corrsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
# --- Assert 'id' is a vector of length 1 indicating the monitor ID
# number. The user can specify 'id' as either an integer, a character, or
# a numeric.  'directory' is a character vector of length 1 indicating the
# location of the CSV files 'summarize' is a logical indicating whether a
# summary of the data should be printed to the console; the default is
# FALSE
# --- Assert construct file name Directory is pre-appended to file name.
# Use sprintf() to add leading zeroes.  E.g. 'specdata/001.csv'
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
# --- Assert read csv
rawDfr <- read.csv(fileStr)
# --- Assert summary if true
if (summarize) {
print(summary(rawDfr))
}
# --- Return value is a data frame
return(rawDfr)
}
y <- corr2("specdata",150)
summary(y)
x <- corr("specdata", 150)
x
summary(x)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
